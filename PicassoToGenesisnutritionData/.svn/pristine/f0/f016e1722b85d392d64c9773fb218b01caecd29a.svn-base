<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd">

<context:property-placeholder location="properties/PicassotoGenesis-test.properties,properties/loggingsetup.properties"/>

    <db:generic-config name="PICASSO_DB_Connection" url="${PicassoDatabaseUrl}${databaseName}${encrypt}${trustServerCertificate}${user}${password}" driverClassName="com.microsoft.sqlserver.jdbc.SQLServerDriver" doc:name="Generic Database Configuration"/>
    <db:generic-config name="Genesis_Database_Configuration" url="${GenesisDatabaseUrl}${GdatabaseName}${Gencrypt}${GtrustServerCertificate}${Guser}${Gpassword}" driverClassName="com.microsoft.sqlserver.jdbc.SQLServerDriver" doc:name="Generic Database Configuration"/>
    <mulexml:xslt-transformer xsl-file="\xslt\Picassso_to_Genesis_Default_Error_Handler.xsl" name="commonErrorHandler" maxIdleTransformers="2" maxActiveTransformers="5" doc:name="XSLT"/>
    
    <flow name="picasotogenisisFlow" processingStrategy="synchronous">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="${timer}" timeUnit="HOURS"/>
            <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                <db:select config-ref="PICASSO_DB_Connection" doc:name="Select Last Run Date">
                    <db:parameterized-query><![CDATA[SELECT max(Tibco_dt) as lastdt FROM t_ko_genesis_load_status;]]></db:parameterized-query>

                </db:select>
            </until-successful>

        </poll>
        <set-variable variableName="coid" value="99#[java.lang.System.currentTimeMillis()]" doc:name="Creating CorelationId"/>
        <message-properties-transformer scope="session" doc:name="Message Properties-CorrelationID">
            <add-message-property key="CorrelationID" value="#[flowVars.coid]"/>
        </message-properties-transformer>
        <message-properties-transformer scope="invocation" doc:name="LastInsert Value and Timestamp">
            <add-message-property key="lastInsert" value="#[payload[0].lastdt]"/>
            <add-message-property key="timestamp" value="#[server.dateTime.format('yyyy-MM-dd HH:mm:ss.SS')]"/>
        </message-properties-transformer>
        
        <message-properties-transformer doc:name="Setting logging Message Properties">
             <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
                 <add-message-property key="messageID" value="#[message.id]"/>
                 <add-message-property key="status" value="Success"/>
                 <add-message-property key="executionPoint" value="Data Pulled from Picasso Successfully"/>
                 <add-message-property key="integrationName" value="${integrationName}"/>
                 <add-message-property key="ip" value="#[server.ip]"/>
                 <add-message-property key="serverName" value="#[server.host]"/>
                 <add-message-property key="domainname" value="cocacola.com"/>
                 <add-message-property key="sourceSystemName" value="Picasso DB"/>
                 <add-message-property key="targetSystemName" value="Genesis DB"/>
                 <add-message-property key="resourceType" value="DataBase"/>
            	 <add-message-property key="resourceName" value="Picasso"/>
        </message-properties-transformer>
 
        <logger level="INFO" doc:name="Splunk Logging" message="#[LoggingAppendString]"/>
        <until-successful maxRetries="1" millisBetweenRetries="300" synchronous="true" doc:name="Until Successful">
            <db:select config-ref="PICASSO_DB_Connection" doc:name="Check for full load">
                <db:parameterized-query><![CDATA[SELECT Full_load FROM t_ko_genesis_load_status]]></db:parameterized-query>
            </db:select>
        </until-successful>
        <message-properties-transformer scope="session" doc:name="Storing full load status">
            <add-message-property key="fullLoadValue" value="#[payload[0].Full_load]"/>
            <add-message-property key="error" value="0"/>
        </message-properties-transformer>

        <flow-ref name="TableExecution" doc:name="Calling PicassoToGenesisTableExecution Synchronosly"/>
        
        <choice doc:name="Choice">
            <when expression="#[sessionVars.error != 0]">
                <set-payload value="Error occured while inserrting data into Genesis The exception message is :#[sessionVars.error] Time:#[server.dateTime]" doc:name="Set Payload"/>
                   <message-properties-transformer doc:name="Message Properties">
            <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
            <add-message-property key="messageID" value="#[message.id]"/>
            <add-message-property key="status" value="Error"/>
            <add-message-property key="executionPoint" value="Data Roll back flow started"/>
            <add-message-property key="ip" value="#[server.ip]"/>
            <add-message-property key="integrationName" value="${integrationName}"/>
            <add-message-property key="serverName" value="#[server.host]"/>
            <add-message-property key="domainname" value="cocacola.com"/>
            <add-message-property key="errorCode" value="E103"/>
            <add-message-property key="CorrelationID" value="#[flowVars.coid]"/>
            <add-message-property key="errorType" value="SQL Exception"/>
            <add-message-property key="errorText" value="#[sessionVars.error]"/>
            <add-message-property key="resourceType" value="DB"/>
            <add-message-property key="resourceName" value="Payload"/>
        </message-properties-transformer>
                <logger message="#[LoggingAppendString]" level="INFO" doc:name="Logger"/>

                <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                    <db:insert config-ref="Genesis_Database_Configuration" doc:name="Database">
                        <db:parameterized-query><![CDATA[Insert into dbo.messages(Message,Source,Log_time) values('PICASSO Nutrition Data Failed','Mulesoft',#[flowVars['timestamp']])]]></db:parameterized-query>
                    </db:insert>
                </until-successful>

                <flow-ref name="RollBackTable" doc:name="RollBackTable"/>
            </when>
            <otherwise>
                <logger message="Audit Table Update" level="INFO" doc:name="Logger"/>
                <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                    <db:insert config-ref="Genesis_Database_Configuration" doc:name="Update_Genesis_Audit_Table">
                        <db:parameterized-query><![CDATA[Insert into dbo.messages(Message,Source,Log_time) values('PICASSO Nutrition Data successfully loaded','Mulesoft',#[flowVars['timestamp']])]]></db:parameterized-query>

                    </db:insert>
                </until-successful>
                <logger message="RunTime Load Setting" level="INFO" doc:name="Logger"/>
                <transactional action="ALWAYS_BEGIN" doc:name="Transactional">
                    <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                        <db:update config-ref="PICASSO_DB_Connection" doc:name="Updating Picasso Audit">
                            <db:parameterized-query><![CDATA[UPDATE t_ko_genesis_load_status set Tibco_dt=#[flowVars.timestamp]]]></db:parameterized-query>
                        </db:update>

                    </until-successful>
                    <catch-exception-strategy doc:name="Catch Exception Strategy">
                        <message-properties-transformer doc:name="Message Properties">
                            <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
                            <add-message-property key="messageID" value="#[message.id]"/>
                            <add-message-property key="status" value="Error"/>
                            <add-message-property key="executionPoint" value="Error while updating Picasso Audit table"/>
                            <add-message-property key="ip" value="#[server.ip]"/>
                            <add-message-property key="integrationName" value="${integrationName}"/>
                            <add-message-property key="serverName" value="#[server.host]"/>
                            <add-message-property key="domainname" value="cocacola.com"/>
                            <add-message-property key="errorCode" value="E103"/>
                            <add-message-property key="CorrelationID" value="#[flowVars.coid]"/>
                            <add-message-property key="errorType" value="SQL Exception"/>
                            <add-message-property key="errorText" value="#[message.exception]"/>
                            <add-message-property key="resourceType" value="DB"/>
                            <add-message-property key="resourceName" value="Payload"/>
                        </message-properties-transformer>
                        <logger message="#[LoggingAppendString]" level="INFO" doc:name="Logger"/>

                        <db:delete config-ref="Genesis_Database_Configuration" doc:name="Database">
                            <db:parameterized-query><![CDATA[DELETE FROM messages where Source='Mulesoft' and log_time=(SELECT MAX(Log_time) from messages where Source='Mulesoft')]]></db:parameterized-query>
                        </db:delete>

                    </catch-exception-strategy>
                </transactional>
            </otherwise>
        </choice>
 
        
         <message-properties-transformer doc:name="Setting logging Message Properties">
            <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
            <add-message-property key="status" value="Success"/>
            <add-message-property key="messageID" value="#[message.id]"/>
            <add-message-property key="executionPoint" value="Picasso to Genesis - Success"/>
            <add-message-property key="integrationName" value="${integrationName}"/>
            <add-message-property key="ip" value="#[server.ip]"/>
            <add-message-property key="serverName" value="#[server.host]"/>
            <add-message-property key="domainname" value="cocacola.com"/>
        </message-properties-transformer>
        <logger message="#[LoggingAppendString] Data load process successfully completed" level="INFO" doc:name="Logger"/>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
            <catch-exception-strategy doc:name="SQL Exception Strategy" when="exception.causedBy(com.microsoft.sqlserver.jdbc.SQLServerException)">

          <message-properties-transformer doc:name="Message Properties">
            <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
            <add-message-property key="messageID" value="#[message.id]"/>
            <add-message-property key="status" value="Error"/>
            <add-message-property key="executionPoint" value="Error Handling"/>
            <add-message-property key="ip" value="#[server.ip]"/>
            <add-message-property key="integrationName" value="${integrationName}"/>
            <add-message-property key="serverName" value="#[server.host]"/>
            <add-message-property key="domainname" value="cocacola.com"/>
            <add-message-property key="errorCode" value="E103"/>
             <add-message-property key="CorrelationID" value="#[flowVars.coid]"/>
            <add-message-property key="errorType" value="SQL Exception"/>
            <add-message-property key="errorText" value="#[(exception.cause!=null)?(exception.cause.message):exception]"/>
            <add-message-property key="resourceType" value="DB"/>
            <add-message-property key="resourceName" value="#[flowVars.tableName]"/>
			</message-properties-transformer>

            <logger level="INFO" doc:name="Logger" message="#[LoggingAppendString] Failed"/>



        </catch-exception-strategy>
        
        
           <catch-exception-strategy doc:name="Catch Exception Strategy">

         <message-properties-transformer doc:name="Message Properties">
            <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
            <add-message-property key="messageID" value="#[message.id]"/>
            <add-message-property key="status" value="Error"/>
            <add-message-property key="executionPoint" value="Error Handling"/>
            <add-message-property key="ip" value="#[server.ip]"/>
            <add-message-property key="integrationName" value="${integrationName}"/>
            <add-message-property key="serverName" value="#[server.host]"/>
            <add-message-property key="domainname" value="cocacola.com"/>
            <add-message-property key="errorCode" value="E104"/>
            <add-message-property key="CorrelationID" value="#[flowVars.coid]"/>
            <add-message-property key="errorType" value="Other Exception"/>
            <add-message-property key="errorText" value="#[(exception.cause!=null)?(exception.cause.message):exception]"/>
            <add-message-property key="resourceType" value="DB"/>
            <add-message-property key="resourceName" value="#[flowVars.tableName]"/>
			</message-properties-transformer>

            <logger level="INFO" doc:name="Logger" message="#[LoggingAppendString] Failed"/>



        </catch-exception-strategy>
        </choice-exception-strategy>
    </flow>
    <flow name="TableExecution">
        <message-properties-transformer doc:name="Setting logging Message Properties">
             <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
                 <add-message-property key="messageID" value="#[message.id]"/>
                 <add-message-property key="status" value="Success"/>
                 <add-message-property key="executionPoint" value="Table Execution Started"/>
                 <add-message-property key="integrationName" value="${integrationName}"/>
                 <add-message-property key="ip" value="#[server.ip]"/>
                 <add-message-property key="serverName" value="#[server.host]"/>
                 <add-message-property key="domainname" value="cocacola.com"/>
                 <add-message-property key="sourceSystemName" value="Picasso DB"/>
                 <add-message-property key="targetSystemName" value="Genesis DB"/>
                 <add-message-property key="resourceType" value="DataBase"/>
            	 <add-message-property key="resourceName" value="Picasso"/>
        </message-properties-transformer>
        <logger message="#[LoggingAppendString]-Table Execution Started" level="INFO" doc:name="Splunk Logging "/>
        <set-variable variableName="tableName" value="${FormulaBOMTable}" doc:name="Formula BOM_TableName"/>
       

         <flow-ref name="PicassosTableSelection" doc:name="Calling PicassosTableSelection with Formula BOM_TableName"/>

       <set-variable variableName="tableName" value="${FormulaExtendedAttributeTable}" doc:name="Formula _ ExtendedAttribute Data_TableName"/>
        <flow-ref name="PicassosTableSelection" doc:name="Calling PicassosTableSelection with Formula _ ExtendedAttribute Data_TableName"/>

        <set-variable variableName="tableName" value="${IngredientCompositionTable}" doc:name="Ingredient _Composition_Batch_TableName"/>
        <flow-ref name="PicassosTableSelection" doc:name="Calling PicassosTableSelection with Ingredient _Composition_Batch_TableName"/>

        <set-variable variableName="tableName" value="${IngredientNutritionTable}" doc:name="Ingredient _Nutrition_TableName"/>
        <flow-ref name="PicassosTableSelection" doc:name="Calling PicassosTableSelection with Ingredient _Nutrition_TableName"/>
 <set-variable variableName="tableName" value="${RawMaterialTable}" doc:name="RawMaterial &#8211; Nutrition-TableName"/>
        <flow-ref name="PicassosTableSelection" doc:name="Calling PicassosTableSelection with RawMaterial &#8211; Nutrition-TableName"/>
        <set-variable variableName="tableName" value="${AllergensTable}" doc:name="Allergens_TableName"/>
        <flow-ref name="PicassosTableSelection" doc:name="Calling PicassosTableSelection with Allergens_TableName"/>
         <message-properties-transformer doc:name="Setting logging Message Properties">
             <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
                 <add-message-property key="messageID" value="#[message.id]"/>
                 <add-message-property key="status" value="Success"/>
                 <add-message-property key="executionPoint" value="Table Execution Completed"/>
                 <add-message-property key="integrationName" value="${integrationName}"/>
                 <add-message-property key="ip" value="#[server.ip]"/>
                 <add-message-property key="serverName" value="#[server.host]"/>
                 <add-message-property key="domainname" value="cocacola.com"/>
                 <add-message-property key="sourceSystemName" value="Picasso DB"/>
                 <add-message-property key="targetSystemName" value="Genesis DB"/>
                 <add-message-property key="resourceType" value="DataBase"/>
            	 <add-message-property key="resourceName" value="Picasso"/>
        </message-properties-transformer>
        <logger message="#[LoggingAppendString]-Table Execution End" level="INFO" doc:name="Splunk logging"/>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
            <catch-exception-strategy when="exception.causedBy(com.microsoft.sqlserver.jdbc.SQLServerException)" doc:name="SQL Exception Strategy">
                <set-session-variable variableName="error" value="#[(exception.cause!=null)?(exception.cause.message):exception]" doc:name="Session Variable"/>
            </catch-exception-strategy>
            <catch-exception-strategy doc:name="Other  Exception Strategy">
                      <message-properties-transformer doc:name="Message Properties">
            <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
            <add-message-property key="messageID" value="#[message.id]"/>
            <add-message-property key="status" value="Error"/>
            <add-message-property key="executionPoint" value="Error Handling"/>
            <add-message-property key="ip" value="#[server.ip]"/>
            <add-message-property key="integrationName" value="${integrationName}"/>
            <add-message-property key="serverName" value="#[server.host]"/>
            <add-message-property key="domainname" value="cocacola.com"/>
            <add-message-property key="errorCode" value="E104"/>
             <add-message-property key="CorrelationID" value="#[flowVars.coid]"/>
            <add-message-property key="errorType" value="Other Exception"/>
            <add-message-property key="errorText" value="#[(exception.cause!=null)?(exception.cause.message):exception]"/>
            <add-message-property key="resourceType" value="DB"/>
            <add-message-property key="resourceName" value="Payload"/>
        </message-properties-transformer>
                <logger message="#[LoggingAppendString]" level="INFO" doc:name="Splunk Logging"/>
            </catch-exception-strategy>
        </choice-exception-strategy>

    </flow>
    <sub-flow name="PicassosTableSelection">
      <message-properties-transformer doc:name="Setting logging Message Properties">
             <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
                 <add-message-property key="messageID" value="#[message.id]"/>
                 <add-message-property key="status" value="Executing fetch and insert "/>
                 <add-message-property key="executionPoint" value="#[flowVars.tableName] "/>
                 <add-message-property key="integrationName" value="${integrationName}"/>
                 <add-message-property key="ip" value="#[server.ip]"/>
                 <add-message-property key="serverName" value="#[server.host]"/>
                  <add-message-property key="CorrelationID" value="#[flowVars.coid]"/>
                 <add-message-property key="domainname" value="cocacola.com"/>
                 <add-message-property key="sourceSystemName" value="Picasso DB"/>
                 <add-message-property key="targetSystemName" value="Genesis DB"/>
                 <add-message-property key="resourceType" value="DataBase"/>
            	 <add-message-property key="resourceName" value="URL"/>
        </message-properties-transformer>
         <logger level="INFO" doc:name="Splunk Logging" message="#[LoggingAppendString]-Picasso records Loading"/>
    <logger message="Executin Started for #[flowVars.tableName] " level="INFO" doc:name="Execution Status"/>
        <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
            <db:select config-ref="PICASSO_DB_Connection" doc:name="Checking for number of rows">
                <db:dynamic-query><![CDATA[select  count(Insert_dt) as RecordCount FROM #[flowVars.tableName] where Insert_dt > '#[flowVars.lastInsert]'
 and Insert_dt <=  '#[flowVars.timestamp]';]]></db:dynamic-query>

            </db:select>
        </until-successful>

        <set-variable variableName="recordCount" value="#[payload[0].RecordCount]" doc:name="Number of Rows"/>
        <logger message="Total records #[flowVars.recordCount]" level="INFO" doc:name="Logger"/>

        <choice doc:name="Routing Based on row count">
            <when expression="#[flowVars.recordCount == 0 &amp;&amp; sessionVars.fullLoadValue != 'Y'  ]">
<message-properties-transformer doc:name="Setting logging Message Properties">
             <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
                 <add-message-property key="messageID" value="#[message.id]"/>
                 <add-message-property key="status" value="Success"/>
                 <add-message-property key="executionPoint" value="no new SRA product information"/>
                 <add-message-property key="integrationName" value="${integrationName}"/>
                 <add-message-property key="ip" value="#[server.ip]"/>
                 <add-message-property key="serverName" value="#[server.host]"/>
                 <add-message-property key="domainname" value="cocacola.com"/>
                 <add-message-property key="sourceSystemName" value="Picasso DB"/>
                 <add-message-property key="targetSystemName" value="Genesis DB"/>
                 <add-message-property key="resourceType" value="DataBase"/>
            	 <add-message-property key="resourceName" value="#[flowVars.tableName]"/>
        </message-properties-transformer>
                <logger message="#[LoggingAppendString]-No records to be fetched for #[flowVars.tableName]" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <choice doc:name="routing based on full load value">
                    <when expression="#[sessionVars.fullLoadValue == 'Y' ]">
                        <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                            <db:select config-ref="PICASSO_DB_Connection" doc:name="Records Full load Count">
                                <db:dynamic-query><![CDATA[select  count(Insert_dt) as RecordCount FROM #[flowVars.tableName]]]></db:dynamic-query>
                            </db:select>
                        </until-successful>

                    <logger level="INFO" doc:name="Full load count" message="Full Load Fetch total records #[payload[0].RecordCount]"/>
                        <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                            
                            <db:select config-ref="PICASSO_DB_Connection" doc:name="Select FullLoad" >
                                <db:dynamic-query><![CDATA[Select * from #[flowVars.tableName]]]></db:dynamic-query>


                            </db:select>
                            </until-successful>

                        
                    </when>
                    <otherwise>
                        <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                            <db:select config-ref="PICASSO_DB_Connection" doc:name="Select DeltaLoad" >
                                <db:dynamic-query><![CDATA[select * FROM #[flowVars.tableName] where Insert_dt > '#[flowVars.lastInsert]'
 and Insert_dt <= '#[flowVars.timestamp]';]]></db:dynamic-query>

                            </db:select>
                        </until-successful>
                        <logger message="Data fetched from #[flowVars.tableName]" level="INFO" doc:name="Logger"/>

                    </otherwise>
                </choice>
                <flow-ref name="GenesisInsertion" doc:name="Calling GenesisInsertion Flow"/>
                <message-properties-transformer doc:name="Setting logging Message Properties">
                    <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
                    <add-message-property key="messageID" value="#[message.id]"/>
                    <add-message-property key="status" value="Success"/>
                    <add-message-property key="executionPoint" value="Genesis Load Complete"/>
                    <add-message-property key="integrationName" value="${integrationName}"/>
                    <add-message-property key="ip" value="#[server.ip]"/>
                    <add-message-property key="serverName" value="#[server.host]"/>
                    <add-message-property key="domainname" value="cocacola.com"/>
                    <add-message-property key="sourceSystemName" value="Picasso DB"/>
                    <add-message-property key="targetSystemName" value="Genesis DB"/>
                    <add-message-property key="resourceType" value="DataBase"/>
                    <add-message-property key="resourceName" value="Picasso"/>
                </message-properties-transformer>
                <logger message="#[LoggingAppendString]-Sent to Genesis" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>

    </sub-flow>
    <sub-flow name="GenesisInsertion">
<message-properties-transformer doc:name="Setting logging Message Properties">
             <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
                 <add-message-property key="messageID" value="#[message.id]"/>
                 <add-message-property key="status" value="Success"/>
                 <add-message-property key="executionPoint" value="Sending Data to Genesis"/>
                 <add-message-property key="integrationName" value="${integrationName}"/>
                 <add-message-property key="ip" value="#[server.ip]"/>
                 <add-message-property key="serverName" value="#[server.host]"/>
                 <add-message-property key="domainname" value="cocacola.com"/>
                 <add-message-property key="sourceSystemName" value="Picasso DB"/>
                 <add-message-property key="targetSystemName" value="Genesis DB"/>
                 <add-message-property key="resourceType" value="DataBase"/>
            	 <add-message-property key="resourceName" value="Picasso"/>
        </message-properties-transformer>
    <logger message="#[LoggingAppendString]-Inserting into Table #[flowVars.tableName]" level="INFO" doc:name="Splunk logging"/>
        <set-variable variableName="BatchC" value="#[0]" doc:name="Setting Batch Count"/>
        <choice doc:name="Routing based on table name">
            <when expression="#[flowVars.tableName =='t_ko_genesis_formula_extattr']">
                <foreach collection="#[payload]" batchSize="${BatchSize}" doc:name="For Each">

                        <set-variable variableName="BatchC" value="#[flowVars.BatchC + 1]" doc:name="Batch"/>
                    <logger message="Running Batch Process #[flowVars.BatchC]" level="INFO" doc:name="Number of Batch execution"/>
                    <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                        
                        <db:insert config-ref="Genesis_Database_Configuration" bulkMode="true" doc:name="Formula_Extattr Table">
                            <db:parameterized-query><![CDATA[INSERT INTO t_ko_genesis_formula_extattr (SpecNumber,Spec_Status,Business_Unit,TOTAL_VOLUME_THEORETICAL_L, TOTAL_VOLUME_THEORETICAL_L_UOM, TOTAL_WEIGHT_THEORETICAL_KG, TOTAL_WEIGHT_THEORETICAL_KG_UOM, DENSITY_KG_L_CALC, DENSITY_KG_L_CALC_UOM, BRIX_FRESH_BRIX_CALC, BRIX_FRESH_BRIX_CALC_UOM, BRIX_INVERT_BRIX_CALC, BRIX_INVERT_BRIX_CALC_UOM, Insert_dt,DENSITY_TYPE) VALUES( #[payload.SpecNumber], #[payload.Spec_Status], #[payload.Business_Unit], #[payload.TOTAL_VOLUME_THEORETICAL_L], #[payload.TOTAL_VOLUME_THEORETICAL_L_UOM], #[payload.TOTAL_WEIGHT_THEORETICAL_KG], #[payload.TOTAL_WEIGHT_THEORETICAL_KG_UOM], #[payload.DENSITY_KG_L_CALC], #[payload.DENSITY_KG_L_CALC_UOM], #[payload.BRIX_FRESH_BRIX_CALC], #[payload.BRIX_FRESH_BRIX_CALC_UOM], #[payload.BRIX_INVERT_BRIX_CALC], #[payload.BRIX_INVERT_BRIX_CALC_UOM], #[payload.Insert_dt],#[payload.Density_Type])]]></db:parameterized-query>

                        </db:insert>
                    </until-successful>

                </foreach>
            </when>
            <when expression="#[flowVars.tableName =='t_ko_genesis_Ingredient_Composition']">
                <foreach batchSize="${BatchSize}" doc:name="For Each">

                        <set-variable variableName="BatchC" value="#[flowVars.BatchC + 1]" doc:name="Variable"/>
                    <logger message="Running Batch Process #[flowVars.BatchC]" level="INFO" doc:name="Number of Batch execution"/>
                    <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                        <db:insert config-ref="Genesis_Database_Configuration" bulkMode="true" doc:name="Ingredient_Composition Table">
                            <db:parameterized-query><![CDATA[INSERT INTO t_ko_genesis_Ingredient_Composition (SpecNumber, status, Business_Unit, Ingredient_Type, Equivalent, Component, Description, Formulation_Tags, Countryname, Formulation, minRange, maxRange, TotalSolids, Func, IsCritical, Insert_dt ) VALUES( #[payload.SpecNumber], #[payload.status], #[payload.Business_Unit], #[payload.Ingredient_Type], #[payload.Equivalent], #[payload.Component], #[payload.Description], #[payload.Formulation_Tags], #[payload.Countryname], #[payload.Formulation], #[payload.minRange], #[payload.maxRange] ,#[payload.TotalSolids], #[payload.Func], #[payload.IsCritical], #[payload.Insert_dt])]]></db:parameterized-query>

                        </db:insert>
                    </until-successful>

                </foreach>
            </when>
            <when expression="#[flowVars.tableName =='t_ko_genesis_ingredient_nutrition']">
                <foreach batchSize="${BatchSize}" doc:name="For Each">

                        <set-variable variableName="BatchC" value="#[flowVars.BatchC + 1]" doc:name="Variable"/>
                    <logger message="Running Batch Process #[flowVars.BatchC]" level="INFO" doc:name="Number of Batch execution"/>
                    <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                        <db:insert config-ref="Genesis_Database_Configuration" bulkMode="true" doc:name="Ingredient_Nutrition Table">
                            <db:parameterized-query><![CDATA[INSERT INTO t_ko_genesis_ingredient_nutrition ( SpecNumber, status, Business_Unit, Ingredient_Type, Equivalent, Nutrient, Per_100g, Per_100gUOM, Method, Source, Comments, Insert_dt) VALUES( #[payload.SpecNumber], #[payload.status], #[payload.Business_Unit], #[payload.Ingredient_Type], #[payload.Equivalent], #[payload.Nutrient], #[payload.Per_100g], #[payload.Per_100gUOM], #[payload.Method], #[payload.Source], #[payload.Comments], #[payload.Insert_dt])]]></db:parameterized-query>
                        </db:insert>
                    </until-successful>

                </foreach>
            </when>
            <when expression="#[flowVars.tableName=='t_ko_genesis_ingredient_allergens_sensitivities']">
                <foreach batchSize="${BatchSize}" doc:name="For Each">

                        <set-variable variableName="BatchC" value="#[flowVars.BatchC + 1]" doc:name="Variable"/>
                    <logger message="Running Batch Process #[flowVars.BatchC]" level="INFO" doc:name="Number of Batch execution"/>
                    <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                        <db:insert config-ref="Genesis_Database_Configuration" bulkMode="true" doc:name="Ingredient_Allergens Table">
                            <db:parameterized-query><![CDATA[INSERT INTO t_ko_genesis_ingredient_allergens_sensitivities VALUES(#[payload.SPECNUMBER],#[payload.status],#[payload.Business_Unit],#[payload.Ingredient_Type],#[payload.Equivalent],#[payload.Type],#[payload.Contains_Flag],#[payload.name],#[payload.Max100g],#[payload.Max100gUOM],#[payload.Comments],#[payload.Insert_dt])]]></db:parameterized-query>
                        </db:insert>
                    </until-successful>

                </foreach>
            </when>
            <when expression="#[flowVars.tableName =='t_ko_genesis_ingredient_raw_mat_extattr']">
                <foreach batchSize="${BatchSize}" doc:name="For Each">

                        <set-variable variableName="BatchC" value="#[flowVars.BatchC + 1]" doc:name="Variable"/>
                    <logger message="Running Batch Process #[flowVars.BatchC]" level="INFO" doc:name="Number of Batch execution"/>
                    <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful">
                        <db:insert config-ref="Genesis_Database_Configuration" bulkMode="true" doc:name="Ingredient_rawMaterial Table">
                            <db:parameterized-query><![CDATA[INSERT INTO t_ko_genesis_ingredient_raw_mat_extattr ( SpecNumber, status, Business_Unit, Ingredient_Type, Equivalent, SOLIDS_SDLC, Titratable_Tgt, Titratable_Min, Titratable_Max, Insert_dt) VALUES( #[payload.SpecNumber], #[payload.status], #[payload.Business_Unit], #[payload.Ingredient_Type], #[payload.Equivalent], #[payload.SOLIDS_SDLC], #[payload.Titratable_Tgt], #[payload.Titratable_Min], #[payload.Titratable_Max], #[payload.Insert_dt])]]></db:parameterized-query>
                        </db:insert>
                    </until-successful>

                </foreach>
            </when>
            <when expression="#[flowVars.tableName =='t_ko_genesis_formula_bom']">
                <foreach batchSize="${BatchSize}" doc:name="For Each">

                        <set-variable variableName="BatchC" value="#[flowVars.BatchC + 1]" doc:name="Variable"/>
                    <logger message="Running Batch Process #[flowVars.BatchC]" level="INFO" doc:name="Number of Batch execution"/>
                    <until-successful maxRetries="${Retry}" synchronous="true" doc:name="Until Successful" millisBetweenRetries="600">
                        <db:insert config-ref="Genesis_Database_Configuration" bulkMode="true" doc:name="FormulaBOMInsertQuery Table">
                            <db:parameterized-query><![CDATA[INSERT INTO t_ko_genesis_formula_bom VALUES( #[payload.SpecNumber], #[payload.Spec_Name], #[payload.Spec_Status], #[payload.Business_Unit],#[payload.Step_Number], #[payload.Part_Code], #[payload.Input_Mat_Name], #[payload.Input_Mat_Num],#[payload.Input_Formula_Num], #[payload.Input_Spec_Type], #[payload.Input_Mat_Qty], #[payload.Input_Mat_UOM],#[payload.Input_GL], #[payload.Input_Yield], #[payload.Percent_Batch], #[payload.Orig_Mat], #[payload.Altinp_Mat_Num],#[payload.Altinp_Frm_Num], #[payload.Alt_Mat_Spec_Nm], #[payload.Alt_Factor], #[payload.Alt_GL],#[payload.Description],#[payload.Insert_dt])]]></db:parameterized-query>
                        </db:insert>
                    </until-successful>

                </foreach>
            </when>
            <otherwise>
                <scripting:component doc:name="User Defined Exception">
                    <scripting:script engine="Groovy"><![CDATA[throw new Exception()]]></scripting:script>
                </scripting:component>
            </otherwise>
        </choice>
        <logger message="Updation of table #[flowVars.tableName] is success!!" level="INFO" doc:name="Insertion Status"/>
   <message-properties-transformer doc:name="Setting logging Message Properties">
             <add-message-property key="timestamp" value="#[server.dateTime.format(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;)]"/>
                 <add-message-property key="messageID" value="#[message.id]"/>
                 <add-message-property key="status" value="Insert Successful "/>
                 <add-message-property key="executionPoint" value="#[flowVars.tableName] "/>
                 <add-message-property key="integrationName" value="${integrationName}"/>
                 <add-message-property key="ip" value="#[server.ip]"/>
                 <add-message-property key="serverName" value="#[server.host]"/>
                 <add-message-property key="domainname" value="cocacola.com"/>
                 <add-message-property key="sourceSystemName" value="Picasso DB"/>
                 <add-message-property key="targetSystemName" value="Genesis DB"/>
                 <add-message-property key="resourceType" value="DataBase"/>
            	 <add-message-property key="resourceName" value="URL"/>
        </message-properties-transformer>
        <logger message="#[LoggingAppendString]" level="INFO" doc:name="Splunk Logging"/>
    </sub-flow>

</mule>
